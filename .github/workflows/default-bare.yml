---
name: default-bare

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:  # run weekly, every Tuesday 03:00
    - cron: '0 3 * * 2'

permissions: {}

jobs:
  build:
    permissions:
      contents: read
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
          - os: ubuntu-24.04
            experimental: false
          - os: ubuntu-22.04
            experimental: false
          - os: ubuntu-20.04
            experimental: false
    env:
      ANSIBLE_CALLBACKS_ENABLED: profile_tasks
      ANSIBLE_EXTRA_VARS: ""

    steps:
      - uses: actions/checkout@v4
        with:
          path: juju4.harden_apache
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: ACL
        run: |
          sudo apt-get install -y acl || true
          mount
          sudo mount -o remount,acl / || true
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install ansible-lint flake8 yamllint
          which ansible
          pip3 install ansible
          pip3 show ansible
          ls -l $HOME/.local/bin || true
          ls -l /opt/hostedtoolcache/Python/3.9.1/x64/bin || true
          echo "/opt/hostedtoolcache/Python/3.9.1/x64/bin" >> $GITHUB_PATH
          ansible --version
          cd $GITHUB_WORKSPACE/juju4.harden_apache
          [ -f get-dependencies.sh ] && sh -x get-dependencies.sh
          { echo '[defaults]'; echo 'callbacks_enabled = profile_tasks, timer'; echo 'roles_path = ../'; echo 'ansible_python_interpreter: /usr/bin/python3'; } >> ansible.cfg
      - name: Environment
        run: |
          set -x
          pwd
          env
          find -ls
      - name: lsattr
        run: |
          set -x
          sudo apt-get install -y e2fsprogs || true
          sudo lsattr / -R -a 2> /dev/null | grep "\----i" > /tmp/lsattr-i-1 || true
      - name: Clean conflicting packages and settings
        run: |
          set -x
          ls /etc/apt/sources.list.d/
          grep -rin ondrej /etc/apt/sources.list* || true
          grep -rin php /etc/apt/sources.list* || true
          dpkg -l |grep php
          sudo sudo add-apt-repository --remove ppa:ondrej/php || true
          sudo rm /etc/apt/sources.list.d/ondrej-ubuntu-php-bionic.list || true
          sudo apt-get -y purge php7.2 php7.2-common || true
          sudo apt-get -y purge php7.3 php7.3-common || true
          sudo apt-get -y purge php7.4 php7.4-common || true
          sudo apt-get -y purge php8.0 php8.0-common || true
          sudo apt-get -y purge php8.1 php8.1-common || true
          sudo apt-get -y autoremove || true
          grep -rin ondrej /etc/apt/sources.list* || true
      - name: run test
        run: |
          cd $GITHUB_WORKSPACE/juju4.harden_apache && ansible-playbook -i localhost, --connection=local --become -vvv test/integration/default/default.yml ${ANSIBLE_EXTRA_VARS}
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
      - name: idempotency run
        run: |
          cd $GITHUB_WORKSPACE/juju4.harden_apache && ansible-playbook -i localhost, --connection=local --become -vvv test/integration/default/default.yml ${ANSIBLE_EXTRA_VARS} | tee /tmp/idempotency.log | grep -q 'changed=0.*failed=0'  && (echo 'Idempotence test: pass' && exit 0)  || (echo 'Idempotence test: fail' && cat /tmp/idempotency.log && exit 0)
      - name: On failure
        run: |
          systemctl -l --no-pager status
          systemctl -l --no-pager --failed
          ls -l /usr/bin/ | egrep '(python|pip|ansible)'
          pip freeze
          pip3 freeze
          ip addr
          cat /etc/resolv.conf
          host www.google.com
          ping -c 1 www.google.com || true
          ping -c 1 8.8.8.8 || true
        if: ${{ failure() }}
        continue-on-error: true
      - name: After script - ansible setup
        run: |
          ansible -i inventory --connection=local -m setup localhost
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - systemd
        run: |
          systemctl -l --no-pager status apache2 || true
          systemctl -l --no-pager status httpd || true
          systemd-analyze --no-pager security || true
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - etc
        run: |
          set -x
          cat /etc/apache2/apache2.conf
          find /etc/apache2/ -type f -ls
          /etc/php/*/apache2/php.ini
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - apache
        run: |
          set -x
          apache2ctl -t
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - logs
        run: |
          set -x
          tail -100 /var/log/apache2/*log
          curl -kv https://localhost/server-status
        if: ${{ always() }}
        continue-on-error: true
      - name: After script - curl
        run: |
          set -x
          curl -vk https://localhost
          curl -kv https://localhost/doesnotexist
          curl -kv https://localhost/server-status
        if: ${{ always() }}
        continue-on-error: true
